{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome to Scheems # Scheems is an API generator for your relational databases. Warning This project is a work in progress. Scheems can create APIs that allow CRUD operations on your databases. Database support is implemented with SQLAlchemy, while request validation is implemented with Pydantic . Just define your models with SQLALchemy, add them to Scheems, and you're good to go! Powered by SQLAlchemy \ud83e\uddd9\u200d\u2642\ufe0f and Starlette \ud83c\udf1f","title":"Home"},{"location":"index.html#welcome-to-scheems","text":"Scheems is an API generator for your relational databases. Warning This project is a work in progress. Scheems can create APIs that allow CRUD operations on your databases. Database support is implemented with SQLAlchemy, while request validation is implemented with Pydantic . Just define your models with SQLALchemy, add them to Scheems, and you're good to go! Powered by SQLAlchemy \ud83e\uddd9\u200d\u2642\ufe0f and Starlette \ud83c\udf1f","title":"Welcome to Scheems"},{"location":"api_reference.html","text":"API Reference # This document lists the public API exposed by Scheems. scheems.application.Scheems # API coordinator class. This class IS NOT an ASGI application, and merely acts to coordinate different routes under the API generated by Scheems. Routes registered on instances of this class are meant to be passed to the starlette.applications.Starlette instance. add_model ( self , table , * , identified_by = None , methods = ( 'GET' ,), allow_bulk = False , allowed_filters = None ) # Creates API routes for a model and adds them to the internal record of Routes. Parameters: Name Type Description Default table Union[sqlalchemy.orm.decl_api.DeclarativeMeta, sqlalchemy.sql.schema.Table] The SQLAlchemy Table or Model for which the routes have to be defined required identified_by str Column by which a row can be identified. If no column is specified, the primary key column is used. This is used for creating the /endpoint/{identifier} route. None methods Sequence[Union[Literal['GET'], Literal['POST'], Literal['DELETE']]] Methods to be allowed on this model. Refer HTTP Methods and Endpoints ('GET',) allow_bulk bool Whether to allow operations that will retrieve/modify more than 1 record in the table. False allowed_filters Sequence[str] List of column names that can be used to filter data via query parameters. Note This parameter cannot be used if allow_bulk is set to False. None","title":"API Reference"},{"location":"api_reference.html#api-reference","text":"This document lists the public API exposed by Scheems.","title":"API Reference"},{"location":"api_reference.html#scheems.application.Scheems","text":"API coordinator class. This class IS NOT an ASGI application, and merely acts to coordinate different routes under the API generated by Scheems. Routes registered on instances of this class are meant to be passed to the starlette.applications.Starlette instance.","title":"Scheems"},{"location":"api_reference.html#scheems.application.Scheems.add_model","text":"Creates API routes for a model and adds them to the internal record of Routes. Parameters: Name Type Description Default table Union[sqlalchemy.orm.decl_api.DeclarativeMeta, sqlalchemy.sql.schema.Table] The SQLAlchemy Table or Model for which the routes have to be defined required identified_by str Column by which a row can be identified. If no column is specified, the primary key column is used. This is used for creating the /endpoint/{identifier} route. None methods Sequence[Union[Literal['GET'], Literal['POST'], Literal['DELETE']]] Methods to be allowed on this model. Refer HTTP Methods and Endpoints ('GET',) allow_bulk bool Whether to allow operations that will retrieve/modify more than 1 record in the table. False allowed_filters Sequence[str] List of column names that can be used to filter data via query parameters. Note This parameter cannot be used if allow_bulk is set to False. None","title":"add_model()"},{"location":"bulk_endpoints.html","text":"","title":"Bulk Endpoints"},{"location":"getting_started.html","text":"Getting Started # Installation # Installation can be done with pip : pip install -U scheems Quickstart # This is a work in progress, there isn't enough code to make this yet. from scheems import Scheems api_routes = Scheems ()","title":"Getting Started"},{"location":"getting_started.html#getting-started","text":"","title":"Getting Started"},{"location":"getting_started.html#installation","text":"Installation can be done with pip : pip install -U scheems","title":"Installation"},{"location":"getting_started.html#quickstart","text":"This is a work in progress, there isn't enough code to make this yet. from scheems import Scheems api_routes = Scheems ()","title":"Quickstart"},{"location":"http_methods.html","text":"Supported HTTP Methods # Not all HTTP methods are supported by Scheems, as each method is given a different purpose. The methods listed here are effective for the scheems.applications.Scheems.add_model and scheems.routes.scheems_route methods. GET HTTP GET requests are used for endpoints that allow data retrieval. Allowing this method allows the following endpoints /model/{identifier} /model/?foo=value&bar=value ; where foo and bar are fields defined in the model. Attention The second endpoint is a Bulk Retrieve Endpoint . POST HTTP POST requests are used for endpoints that allow data modification This can be either UPDATE INSERT Effectively an UPSERT takes place. Allowing this method allows the following endpoints /model/{identifier} DELETE HTTP DELETE requests are allowed for endpoints that allow data deletion. Allowing this method allows the following endpoints /model/{identifier} ; deletes that single record","title":"HTTP Methods and corresponding Routes"},{"location":"http_methods.html#supported-http-methods","text":"Not all HTTP methods are supported by Scheems, as each method is given a different purpose. The methods listed here are effective for the scheems.applications.Scheems.add_model and scheems.routes.scheems_route methods. GET HTTP GET requests are used for endpoints that allow data retrieval. Allowing this method allows the following endpoints /model/{identifier} /model/?foo=value&bar=value ; where foo and bar are fields defined in the model. Attention The second endpoint is a Bulk Retrieve Endpoint . POST HTTP POST requests are used for endpoints that allow data modification This can be either UPDATE INSERT Effectively an UPSERT takes place. Allowing this method allows the following endpoints /model/{identifier} DELETE HTTP DELETE requests are allowed for endpoints that allow data deletion. Allowing this method allows the following endpoints /model/{identifier} ; deletes that single record","title":"Supported HTTP Methods"}]}